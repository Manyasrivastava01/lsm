{"ast":null,"code":"import { isWillChangeMotionValue } from './is.mjs';\nfunction addValueToWillChange(visualElement, key) {\n  if (!visualElement.applyWillChange) return;\n  const willChange = visualElement.getValue(\"willChange\");\n  /**\r\n   * It could be that a user has set willChange to a regular MotionValue,\r\n   * in which case we can't add the value to it.\r\n   */\n  if (isWillChangeMotionValue(willChange)) {\n    return willChange.add(key);\n  }\n}\nexport { addValueToWillChange };","map":{"version":3,"names":["isWillChangeMotionValue","addValueToWillChange","visualElement","key","applyWillChange","willChange","getValue","add"],"sources":["C:/Users/user/Downloads/lsm/node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs"],"sourcesContent":["import { isWillChangeMotionValue } from './is.mjs';\r\n\r\nfunction addValueToWillChange(visualElement, key) {\r\n    if (!visualElement.applyWillChange)\r\n        return;\r\n    const willChange = visualElement.getValue(\"willChange\");\r\n    /**\r\n     * It could be that a user has set willChange to a regular MotionValue,\r\n     * in which case we can't add the value to it.\r\n     */\r\n    if (isWillChangeMotionValue(willChange)) {\r\n        return willChange.add(key);\r\n    }\r\n}\r\n\r\nexport { addValueToWillChange };\r\n"],"mappings":"AAAA,SAASA,uBAAuB,QAAQ,UAAU;AAElD,SAASC,oBAAoBA,CAACC,aAAa,EAAEC,GAAG,EAAE;EAC9C,IAAI,CAACD,aAAa,CAACE,eAAe,EAC9B;EACJ,MAAMC,UAAU,GAAGH,aAAa,CAACI,QAAQ,CAAC,YAAY,CAAC;EACvD;AACJ;AACA;AACA;EACI,IAAIN,uBAAuB,CAACK,UAAU,CAAC,EAAE;IACrC,OAAOA,UAAU,CAACE,GAAG,CAACJ,GAAG,CAAC;EAC9B;AACJ;AAEA,SAASF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}